AWSTemplateFormatVersion: '2010-09-09'
Description: Launch a scalable IIS environment based on a launch template, Application Load Balancer and Auto Scaling Group. Scaling handled by Lifecycle Hooks, EventBridge, and custom SSM Automation runbooks.
Parameters:
  ImageIdParameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-Base
    Description: 'Enter an AMI Id. The default value is Windows Server 2019 Core: /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-Base.'
  InstanceTypeParameter:
    Type: String
    Default: t3.2xlarge
    AllowedValues:
      - t3a.2xlarge
      - t3.2xlarge
      - m5.large
      - c5.large
    Description: Select an instance type. The default instance type is t3.2xlarge.
  LaunchTemplateSecurityGroupParameter:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Select EC2 security group to assign to the launch template.
  VpcIdParameter:
    Type: List<AWS::EC2::VPC::Id>
    Description: List of Virtual Private Cloud (VPC) Ids in your account.
  ELBSchemeParameter:
    Type: String
    Default: internet-facing
    AllowedValues:
      - internet-facing
      - internal
    Description: Select whether the ELB is internet-facing (public) or internal (private).
  ELBSubnetParameter:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select EC2 subnets to assign to the ELB.
  ELBSecurityGroupParameter:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Select EC2 security group to assign to the ELB.
  SNSEndpointParameter:
    Type: String
    Description: Type the email address that will receive Auto Scaling notifications.
  ASGMinSizeParameter:
    Type: Number
    Description: Minimum instance size for the Auto Scaling Group.
  ASGMaxSizeParameter:
    Type: Number
    Description: Maximum instance size for the Auto Scaling Group.
  ASGDesiredCapacityParameter:
    Type: Number
    Description: Desired capacity instance size for the Auto Scaling Group.
  ASGSubnetParameter:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select EC2 subnets to assign to the Auto Scaling Group.
  SSMDomainJoinAutomationParameter:
    Type: String
    Description: Enter the custom AD domain join SSM Automation runbook name.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Launch Template Configuration
        Parameters:
          - ImageIdParameter
          - InstanceTypeParameter
          - LaunchTemplateSecurityGroupParameter
      - Label:
          default: Elastic Load Balancer Configuration
        Parameters:
          - VpcIdParameter
          - ELBSchemeParameter
          - ELBSubnetParameter
          - ELBSecurityGroupParameter
      - Label:
          default: Amazon EC2 Auto Scaling Configuration
        Parameters:
          - SNSEndpointParameter
          - ASGDesiredCapacityParameter
          - ASGMinSizeParameter
          - ASGMaxSizeParameter
          - ASGSubnetParameter
      - Label:
          default: SSM Automation Runbook(s)
        Parameters:
          - SSMDomainJoinAutomationParameter
    ParameterLabels:
      ImageIdParameter:
        default: Amazon Machine Image (AMI) Id
      InstanceTypeParameter:
        default: Instance Type
      LaunchTemplateSecurityGroupParameter:
        default: Security Group
      VpcIdParameter:
        default: Vpc Id
      ELBSchemeParameter:
        default: ELB Scheme
      ELBSecurityGroupParameter:
        default: Security Group
      ELBSubnetParameter:
        default: VPC Subnets
      SNSEndpointParameter:
        default: SNS Email Address
      ASGSubnetParameter:
        default: VPC Subnets
      ASGMinSizeParameter:
        default: Minimum Size
      ASGMaxSizeParameter:
        default: Maximum Size
      ASGDesiredCapacityParameter:
        default: Desired Capacity
      SSMDomainJoinAutomationParameter:
        default: Domain Join Automation
Resources:
  EC2SSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      Description: New IAM Role to allow SSM access.
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'EC2SSMRole'
  SSMAutomationAssumeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ssm.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Description: New IAM Role for SSM Automation assume role.
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:*
                Resource:
                  - !Join
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:'
                      - !Ref 'AWS::Region'
                      - ::document/AWS-RunPowerShellScript
                  - !Join
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - :instance/*
              - Effect: Allow
                Action:
                  - ssm:*
                Resource:
                  - !Join
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ec2:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - :instance/*
  SSMEVBRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      Description: New IAM Role to allow SSM access from EventBridge.
  SSMEVBIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CustomPolicyCFN
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: iam:PassRole
            Resource: !GetAtt 'SSMAutomationAssumeRole.Arn'
            Condition:
              StringLikeIfExists:
                iam:PassedToService: ssm.amazonaws.com
          - Effect: Allow
            Action: ssm:StartAutomationExecution
            Resource:
              - !Join
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':ssm:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - :automation-definition/
                  - !Ref 'SSMDomainJoinAutomationParameter'
                  - :$DEFAULT
      Roles:
        - !Ref 'SSMEVBRole'
  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    DeletionPolicy: Delete
    Properties:
      LaunchTemplateData:
        InstanceType: !Ref 'InstanceTypeParameter'
        ImageId: !Ref 'ImageIdParameter'
        SecurityGroupIds:
          - !Select
            - '0'
            - !Ref 'LaunchTemplateSecurityGroupParameter'
        IamInstanceProfile:
          Arn: !GetAtt 'IamInstanceProfile.Arn'
        UserData:
          Fn::Base64: !Sub |
            <powershell>
            Add-WindowsFeature -Name Web-Server | Out-Null
            </powershell>
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: !Ref 'ELBSchemeParameter'
      Subnets:
        - !Select
          - '0'
          - !Ref 'ELBSubnetParameter'
        - !Select
          - '1'
          - !Ref 'ELBSubnetParameter'
      SecurityGroups:
        - !Select
          - '0'
          - !Ref 'ELBSecurityGroupParameter'
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Select
        - '0'
        - !Ref 'VpcIdParameter'
      HealthyThresholdCount: 5
      HealthCheckTimeoutSeconds: 120
      HealthCheckIntervalSeconds: 300
      UnhealthyThresholdCount: 10
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref 'ALB'
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref 'ALBTargetGroup'
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref 'SNSEndpointParameter'
          Protocol: email
  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: !Ref 'ASGMinSizeParameter'
      MaxSize: !Ref 'ASGMaxSizeParameter'
      DesiredCapacity: !Ref 'ASGDesiredCapacityParameter'
      HealthCheckType: ELB
      HealthCheckGracePeriod: 60
      Cooldown: 30
      LaunchTemplate:
        LaunchTemplateId: !Ref 'EC2LaunchTemplate'
        Version: !GetAtt 'EC2LaunchTemplate.LatestVersionNumber'
      VPCZoneIdentifier:
        - !Select
          - '0'
          - !Ref 'ASGSubnetParameter'
        - !Select
          - '1'
          - !Ref 'ASGSubnetParameter'
      TargetGroupARNs:
        - !Ref 'ALBTargetGroup'
      LifecycleHookSpecificationList:
        - LifecycleTransition: autoscaling:EC2_INSTANCE_LAUNCHING
          LifecycleHookName: DomainJoinLaunchHook
          HeartbeatTimeout: 300
          DefaultResult: CONTINUE
        - LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
          LifecycleHookName: DomainUnjoinLaunchHook
          HeartbeatTimeout: 300
          DefaultResult: ABANDON
      NotificationConfigurations:
        - NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_TERMINATE
          TopicARN: !Ref 'SNSTopic'
  DomainJoinEventBridge:
    Type: AWS::Events::Rule
    Properties:
      State: ENABLED
      Description: EVB to join AD.
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance-launch Lifecycle Action
          - EC2 Instance-terminate Lifecycle Action
        detail:
          AutoScalingGroupName:
            - !Ref 'ASG'
      Targets:
        - Arn: !Join
            - ''
            - - 'arn:'
              - !Ref 'AWS::Partition'
              - ':ssm:'
              - !Ref 'AWS::Region'
              - ':'
              - !Ref 'AWS::AccountId'
              - :automation-definition/
              - !Ref 'SSMDomainJoinAutomationParameter'
          Id: DomainJoinEBv1
          RoleArn: !GetAtt 'SSMEVBRole.Arn'
          InputTransformer:
            InputPathsMap:
              instanceid: $.detail.EC2InstanceId
              lifecycletransition: $.detail.LifecycleTransition
            InputTemplate: '{"InstanceId":[<instanceid>],"LifecycleTransition":[<lifecycletransition>]}'
Outputs:
  ELBUrl:
    Description: DNS name of the ELB.
    Value: !GetAtt 'ALB.DNSName'
